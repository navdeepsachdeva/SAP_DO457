- name: Facts Demo
  hosts: iosxe1*
  # hosts: workstation*
  gather_facts: false

  tasks:
    - name: Collect Facts Manually
      cisco.ios.ios_facts:
        gather_subset: all

    - name: PRINT
      ansible.builtin.debug:
        msg: "{{ ansible_net_interfaces.GigabitEthernet1 }}"

    - name: Print Facts for Cisco Device
      ansible.builtin.copy:
        dest: ./info/{{ inventory_hostname }}.txt
        content: |
          
          API           = {{ ansible_net_api }}
          Hostname      = {{ ansible_facts.net_hostname | upper }}
          Type          = {{ ansible_facts['net_iostype'] }}
          Model         = {{ ansible_facts['net_model'] }}
          Serial Number = {{ ansible_facts['net_serialnum'] }}
          OS            = {{ ansible_facts['net_system'] }}
          OS Version    = {{ ansible_facts['net_version'] }}
          GE1 MAC 1     = {{ ansible_net_interfaces.GigabitEthernet1.macaddress }}
          GE1 MAC 2     = {{ ansible_facts.net_interfaces.GigabitEthernet1.macaddress | default("Not Available") | length }}
          GE1 MAC 3     = {{ ansible_facts['net_interfaces']['GigabitEthernet1']['macaddress'] }}
          GE2 MAC       = {{ ansible_net_interfaces.GigabitEthernet2.macaddress | default("Not Available") }}
          GE3 MAC       = {{ ansible_net_interfaces.GigabitEthernet3.macaddress | default("Not Available") }}

    - name: Configure the login banner
      cisco.ios.ios_banner:
        banner: login
        text: "Any Damn"
        state: present
      when: ansible_facts['net_version'] >= "17"
      
    # - name: Print Facts for Linux Device
    #   ansible.builtin.debug:
    #     msg: |
    #       ARCH 1  = {{ ansible_architecture }}
    #       ARCH 2  = {{ ansible_facts.architecture }}
    #       ARCH 3  = {{ ansible_facts['architecture'] }}
    #       IP      = {{ ansible_facts['default_ipv4']['address'] }}
         
